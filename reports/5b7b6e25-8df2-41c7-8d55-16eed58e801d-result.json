{"name": "test_proceed_to_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class=\"block items-in-cart\"]\"}\n  (Session info: chrome=108.0.5359.95)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00DAF243]\n\t(No symbol) [0x00D37FD1]\n\t(No symbol) [0x00C2D04D]\n\t(No symbol) [0x00C5C0B0]\n\t(No symbol) [0x00C5C22B]\n\t(No symbol) [0x00C8E612]\n\t(No symbol) [0x00C785D4]\n\t(No symbol) [0x00C8C9EB]\n\t(No symbol) [0x00C78386]\n\t(No symbol) [0x00C5163C]\n\t(No symbol) [0x00C5269D]\n\tGetHandleVerifier [0x01049A22+2655074]\n\tGetHandleVerifier [0x0103CA24+2601828]\n\tGetHandleVerifier [0x00E58C0A+619850]\n\tGetHandleVerifier [0x00E57830+614768]\n\t(No symbol) [0x00D405FC]\n\t(No symbol) [0x00D45968]\n\t(No symbol) [0x00D45A55]\n\t(No symbol) [0x00D5051B]\n\tBaseThreadInitThunk [0x77A56939+25]\n\tRtlGetFullPathName_UEx [0x77CF8FD2+1218]\n\tRtlGetFullPathName_UEx [0x77CF8F9D+1165]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eecdc2c9f5a9f821625547db643397d7\")>\n\n    @allure.feature('Men')\n    @pytest.mark.men\n    def test_proceed_to_checkout(driver):\n        men = Men(driver)\n        men.open_men_page()\n        men.click_button_cart()\n        men.click_button_proceed_to_checkout()\n        assert men.check_name_in_address()\n>       men.click_button_view_items()\n\ntests\\test_men_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\men_page.py:93: in click_button_view_items\n    self.find(button_view_items).click()\npages\\base_page.py:17: in find\n    return self.driver.find_element(by_name, by_val)\n..\\..\\diplom_project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\diplom_project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B1C21CBFD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...unk [0x77A56939+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF8FD2+1218]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF8F9D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class=\"block items-in-cart\"]\"}\nE         (Session info: chrome=108.0.5359.95)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00DAF243]\nE       \t(No symbol) [0x00D37FD1]\nE       \t(No symbol) [0x00C2D04D]\nE       \t(No symbol) [0x00C5C0B0]\nE       \t(No symbol) [0x00C5C22B]\nE       \t(No symbol) [0x00C8E612]\nE       \t(No symbol) [0x00C785D4]\nE       \t(No symbol) [0x00C8C9EB]\nE       \t(No symbol) [0x00C78386]\nE       \t(No symbol) [0x00C5163C]\nE       \t(No symbol) [0x00C5269D]\nE       \tGetHandleVerifier [0x01049A22+2655074]\nE       \tGetHandleVerifier [0x0103CA24+2601828]\nE       \tGetHandleVerifier [0x00E58C0A+619850]\nE       \tGetHandleVerifier [0x00E57830+614768]\nE       \t(No symbol) [0x00D405FC]\nE       \t(No symbol) [0x00D45968]\nE       \t(No symbol) [0x00D45A55]\nE       \t(No symbol) [0x00D5051B]\nE       \tBaseThreadInitThunk [0x77A56939+25]\nE       \tRtlGetFullPathName_UEx [0x77CF8FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x77CF8F9D+1165]\n\n..\\..\\diplom_project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchElementException"}, "start": 1670852617967, "stop": 1670852634977, "uuid": "e2e134f3-c239-4088-b1d6-cbb63e190b4e", "historyId": "9e60b695b850aba409f2192e35ed8aa6", "testCaseId": "43fd44e88c5a4607fdbd0905566218e5", "fullName": "tests.test_men_page#test_proceed_to_checkout", "labels": [{"name": "feature", "value": "Men"}, {"name": "tag", "value": "men"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_men_page"}, {"name": "host", "value": "LAPTOP-IVBD6KDU"}, {"name": "thread", "value": "27104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_men_page"}]}